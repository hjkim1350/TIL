List Comprehension - 삼항연산자

[number**3 for number in range(1, 4)]
처럼 한줄에 코드를 표현하는 형태인데, 특정한 원소로 구성된 리스트를 만들때 사용이 가능

Dictionary Comprehension
{number: number**3 for number in range(1,4)}

lamda
- 이름이 없는 함수
- return문을 가질 수 없음
- 간편 조건문 외 조건문이나 반복문을 가질 수 없음
- 함수를 정의해서 사용하는 것보다 간결하게 사용 가능
- def를 사용하지 못하는 환경에서 사용 가능

예시)
def multiple_3(3)
    return n*3
이라는 함수를 정의하기 보다는 하기와 같은 람다로 1줄에 끝낼 수 있음

print(list(map(lamda n: n*3, numbers)))
함수를 별도로 지정하지 않고 lamda를 사용함!


filter(function, iterable) 함수 - map이랑 비슷한 느낌이긴 하나 약간의 차이는 있음


annotation : 주석? 같은 느낌, 엑셀에 메모 같은. 화살표로 표시함.
def add (x: int, y: int) -> int: